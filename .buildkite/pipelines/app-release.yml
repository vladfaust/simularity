steps:
  - label: "Build Client"
    artifact_paths:
      - "packages/client/dist/**/*"
    command: |
      echo "--- Building API"
      cd packages\\api
      npm ci
      npm run build
      echo "--- Building Client"
      cd ..\\client
      npm ci
      \$env:VITE_DATABASE_PATH = "simularity.db"
      \$env:VITE_API_BASE_URL = "https://api.simularity.ai"
      \$env:VITE_WEB_BASE_URL = "https://simularity.ai"
      \$env:VITE_DISCORD_URL = ðŸš¨UNSETðŸš¨
      \$env:VITE_REDDIT_URL = ðŸš¨UNSETðŸš¨
      \$env:VITE_X_URL = ðŸš¨UNSETðŸš¨
      \$env:VITE_EXPERIMENTAL_IMMERSIVE_MODE = "true"
      \$env:VITE_PLAUSIBLE_API_HOST = "https://plausible.simularity.ai"
      \$env:VITE_SENTRY_DSN = ðŸš¨UNSETðŸš¨
      \$env:VITE_SENTRY_ORG = "simularity-ai"
      \$env:VITE_SENTRY_PROJECT = "client"
      \$env:VITE_SENTRY_AUTH_TOKEN = ðŸš¨UNSETðŸš¨
      \$env:NODE_OPTIONS = "--max-old-space-size=4096"
      npm run build

  - wait

  - label: "Build Core C++"
    artifact_paths:
      - "packages/core-cpp/build/lua-cjson.lib"
      - "packages/core-cpp/build/lua.lib"
      - "packages/core-cpp/build/simularity.lib"
      - "packages/core-cpp/build/xxhash.lib"
      - "packages/core-cpp/build/vendor/llama.cpp/src/llama.lib"
      - "packages/core-cpp/build/vendor/ggml/src/ggml.lib"
    command: |
      Import-Module "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\Common7\Tools\Microsoft.VisualStudio.DevShell.dll"; Enter-VsDevShell -VsInstallPath "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools" -DevCmdArguments '-arch=x64'
      cd packages\\core-cpp
      mkdir build
      cd build
      echo "--- Configuring"
      cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CUDA_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE=Release -DGGML_CUDA=ON -DGGML_CUDA_FORCE_MMQ=ON -DGGML_OPENMP=OFF -DGGML_NATIVE=OFF -GNinja ..
      echo "--- Building"
      cmake --build . -j3

  - wait

  - label: "Build Tauri"
    artifact_paths:
      - "C:/target/release/bundle/nsis/*_x64-setup.exe"
    command: |
      Import-Module "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\Common7\Tools\Microsoft.VisualStudio.DevShell.dll"; Enter-VsDevShell -VsInstallPath "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools" -DevCmdArguments '-arch=x64'
      \$env:Path += ";C:\Users\Administrator\.rustup\toolchains\stable-x86_64-pc-windows-msvc\bin;C:\Users\Administrator\.cargo\\bin"
      \$env:CUDA_LIB_PATH = 'C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6\lib\x64'
      echo "--- Downloading artifacts"
      buildkite-agent artifact download 'packages\\core-cpp\\build\\**' . --step 'Build Core C++'
      buildkite-agent artifact download 'packages\\client\\dist\\**' . --step 'Build Client'
      echo "--- Building app"
      cd packages\\tauri
      cargo tauri build --ci -v -c tauri.prod.conf.json -- --target-dir C:\\target --features cuda
