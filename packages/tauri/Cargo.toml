[package]
name = "simularity-tauri"
version = "0.1.0"
description = "Simularity Tauri module"
authors = ["Vlad Faust <hey@vladfaust.com>"]
license = "UNLICENSED"
default-run = "simularity-tauri"
edition = "2021"
rust-version = "1.80"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.0.4", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.1.0", features = [
  "cli",
  "dialog-confirm",
  "dialog-message",
  "dialog-open",
  "fs-create-dir",
  "fs-exists",
  "fs-read-dir",
  "fs-read-file",
  "fs-remove-file",
  "fs-rename-file",
  "fs-write-file",
  "global-shortcut-all",
  "http-request",
  "path-all",
  "process-exit",
  "process-relaunch",
  "protocol-asset",
  "shell-open",
  "window-close",
] }
simularity-core = { path = "../core-rs" }
anyhow = "1.0.83"
rusqlite = { version = "0.31.0", features = ["bundled"] }
tauri-plugin-persisted-scope = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-store = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
sha2 = "0.10.8"
bytesize = "1.3.0"
tauri-plugin-fs-extra = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
ring = { version = "0.17.8", features = ["std"] }
data-encoding = "2.6.0"
curl = { version = "0.4.46", features = ["static-curl", "static-ssl"] }

[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = ["custom-protocol"]
# this feature is used used for production builds where `devPath` points to the filesystem
# DO NOT remove this
custom-protocol = ["tauri/custom-protocol"]
cuda = ["simularity-core/cuda"]
